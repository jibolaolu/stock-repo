server {
    listen       80;
    server_name  techbleats.eaglesoncloude.com;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    # Serve frontend (React/Vue/Angular)
    location / {
		#return 301 https://$host$request_uri;
        try_files $uri /index.html;
    }

    # Proxy API calls to Backend running on AWS ECS
    location /api/ {
        proxy_pass http://techbleats.eaglesoncloude.com/api/;  # ✅ ALB will route it correctly
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ✅ Fix Grafana Proxy - Preserve Auth Headers & Sessions
    location /grafana/ {
        rewrite ^/grafana(/.*)$ $1 break;  # ✅ Prevent duplicate /grafana paths
        proxy_pass http://techbleats.eaglesoncloude.com/;  # ✅ ALB handles the routing
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # ✅ Preserve authentication headers & cookies
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Cookie $http_cookie;
        proxy_cookie_path / "/grafana/";  # ✅ Ensure Grafana sets correct cookies

        # ✅ Prevent login redirects
        sub_filter 'href="/' 'href="/grafana/';
        sub_filter_once off;
    }

    # Fix CORS issues
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Cookie";

    # Handle preflight requests
    if ($request_method = OPTIONS) {
        return 204;
    }
}